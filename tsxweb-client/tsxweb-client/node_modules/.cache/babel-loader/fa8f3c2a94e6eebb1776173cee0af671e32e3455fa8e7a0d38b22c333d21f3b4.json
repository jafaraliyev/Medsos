{"ast":null,"code":"var _jsxFileName = \"/Users/farhadguliyev/Documents/GitHub/Medsos/tsxweb-client/tsxweb-client/src/Home.tsx\",\n  _s = $RefreshSig$();\nimport Timer from \"./timer\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonNames = ['Seizure', 'Heart Attack', 'Stroke', 'Choke', 'Diabetes', 'Blood', 'Asthma', 'Broken Bones'];\nconst buttonImages = ['https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTkGvOEnYdpethXYTWm3aq_D7_vr17G0VH9HfWCJFmvSGg1f5wS', 'https://www.bostonmagazine.com/wp-content/uploads/sites/2/2013/11/heart_attack_square.jpg', 'https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRdKTmps5DxKjz8NW8YNxUmjD96Ork8p4iJ-8LmLAFSqlitMI8i', 'https://api.kramesstaywell.com/Content/6066ca30-310a-4170-b001-a4ab013d61fd/ucr-images-v1/Images/83412_1', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSJjbk-cUI9VimD-LvHSraOPMtUACLPIimjMR6d0cYIEV_Wt1Ca', 'https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTbOSJAO_Cm5-uFvVwoSkZbL8o0zPG2nHQFHcLbsnQ1Oc-Vhtmk', 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcSZPgP2iTkY7xor_gBWq8LBi8vVgjWB1DaUyhDdG7Y8YGrcrWi8', 'https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcTMu7UhgkLxmi9puU7Jhbt_YwkfOZY3kVJLnDFunSoX1eg548la'];\n\n// Function to determine text color based on image brightness\nconst getTextColor = imageUrl => {\n  // You can implement a logic to calculate brightness based on the image (e.g., using image processing libraries)\n  // For simplicity, let's assume a light or dark text color based on a placeholder condition\n  return someCondition ? 'white' : 'black';\n};\nexport function ButtonContainer() {\n  _s();\n  const navigation = useNavigate();\n  const buttons = buttonNames.map((name, index) => {\n    const textColor = getTextColor(buttonImages[index]);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      style: {\n        backgroundImage: `url(${buttonImages[index]})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        color: textColor\n      },\n      onClick: () => navigation('/' + name.toLowerCase().replace(/\\s+/g, '-')),\n      children: name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-container\",\n    children: [buttons, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emergency-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"emergency-button\",\n        children: \"Et \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(ButtonContainer, \"7sZc5EvTsFMSo4mPTlyGC/0+rew=\", false, function () {\n  return [useNavigate];\n});\n_c = ButtonContainer;\nexport default ButtonContainer;\nvar _c;\n$RefreshReg$(_c, \"ButtonContainer\");","map":{"version":3,"names":["Timer","React","useNavigate","jsxDEV","_jsxDEV","buttonNames","buttonImages","getTextColor","imageUrl","someCondition","ButtonContainer","_s","navigation","buttons","map","name","index","textColor","className","style","backgroundImage","backgroundSize","backgroundPosition","color","onClick","toLowerCase","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/farhadguliyev/Documents/GitHub/Medsos/tsxweb-client/tsxweb-client/src/Home.tsx"],"sourcesContent":["import Timer from \"./timer\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst buttonNames = [\n    'Seizure',\n    'Heart Attack',\n    'Stroke',\n    'Choke',\n    'Diabetes',\n    'Blood',\n    'Asthma',\n    'Broken Bones',\n];\n\n\nconst buttonImages = [\n    'https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTkGvOEnYdpethXYTWm3aq_D7_vr17G0VH9HfWCJFmvSGg1f5wS',\n    'https://www.bostonmagazine.com/wp-content/uploads/sites/2/2013/11/heart_attack_square.jpg',\n    'https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRdKTmps5DxKjz8NW8YNxUmjD96Ork8p4iJ-8LmLAFSqlitMI8i',\n    'https://api.kramesstaywell.com/Content/6066ca30-310a-4170-b001-a4ab013d61fd/ucr-images-v1/Images/83412_1',\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSJjbk-cUI9VimD-LvHSraOPMtUACLPIimjMR6d0cYIEV_Wt1Ca',\n    'https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTbOSJAO_Cm5-uFvVwoSkZbL8o0zPG2nHQFHcLbsnQ1Oc-Vhtmk',\n    'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcSZPgP2iTkY7xor_gBWq8LBi8vVgjWB1DaUyhDdG7Y8YGrcrWi8',\n    'https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcTMu7UhgkLxmi9puU7Jhbt_YwkfOZY3kVJLnDFunSoX1eg548la',\n];\n\n\n// Function to determine text color based on image brightness\nconst getTextColor = (imageUrl) => {\n    // You can implement a logic to calculate brightness based on the image (e.g., using image processing libraries)\n    // For simplicity, let's assume a light or dark text color based on a placeholder condition\n    return someCondition ? 'white' : 'black';\n};\n\nexport function ButtonContainer() {\n    const navigation = useNavigate();\n    const buttons = buttonNames.map((name, index) => {\n        const textColor = getTextColor(buttonImages[index]);\n\n        return (\n            <button\n                key={index}\n                className=\"button\"\n                style={{\n                    backgroundImage: `url(${buttonImages[index]})`,\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    color: textColor,\n                }}\n                onClick={() => navigation('/' + name.toLowerCase().replace(/\\s+/g, '-'))}\n            >\n                {name}\n            </button>\n        );\n    });\n\n    return (\n        <div className=\"button-container\">\n            {buttons}\n            <div className=\"emergency-container\">\n                <button className=\"emergency-button\">Et </button>\n            </div>\n            <Timer />\n        </div>\n    );\n}\n\nexport default ButtonContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAG,CAChB,SAAS,EACT,cAAc,EACd,QAAQ,EACR,OAAO,EACP,UAAU,EACV,OAAO,EACP,QAAQ,EACR,cAAc,CACjB;AAGD,MAAMC,YAAY,GAAG,CACjB,0GAA0G,EAC1G,2FAA2F,EAC3F,0GAA0G,EAC1G,0GAA0G,EAC1G,0GAA0G,EAC1G,0GAA0G,EAC1G,0GAA0G,EAC1G,0GAA0G,CAC7G;;AAGD;AACA,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EAC/B;EACA;EACA,OAAOC,aAAa,GAAG,OAAO,GAAG,OAAO;AAC5C,CAAC;AAED,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,UAAU,GAAGV,WAAW,CAAC,CAAC;EAChC,MAAMW,OAAO,GAAGR,WAAW,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC7C,MAAMC,SAAS,GAAGV,YAAY,CAACD,YAAY,CAACU,KAAK,CAAC,CAAC;IAEnD,oBACIZ,OAAA;MAEIc,SAAS,EAAC,QAAQ;MAClBC,KAAK,EAAE;QACHC,eAAe,EAAG,OAAMd,YAAY,CAACU,KAAK,CAAE,GAAE;QAC9CK,cAAc,EAAE,OAAO;QACvBC,kBAAkB,EAAE,QAAQ;QAC5BC,KAAK,EAAEN;MACX,CAAE;MACFO,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAAC,GAAG,GAAGG,IAAI,CAACU,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAE;MAAAC,QAAA,EAExEZ;IAAI,GAVAC,KAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWN,CAAC;EAEjB,CAAC,CAAC;EAEF,oBACI3B,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAS,QAAA,GAC5Bd,OAAO,eACRT,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAS,QAAA,eAChCvB,OAAA;QAAQc,SAAS,EAAC,kBAAkB;QAAAS,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACN3B,OAAA,CAACJ,KAAK;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACpB,EAAA,CA/BeD,eAAe;EAAA,QACRR,WAAW;AAAA;AAAA8B,EAAA,GADlBtB,eAAe;AAiC/B,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}