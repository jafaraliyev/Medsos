{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jafar's PC\\\\Documents\\\\GitHub\\\\Medsos\\\\tsxweb-client\\\\tsxweb-client\\\\src\\\\mainchat\\\\chat.tsx\";\nimport React from \"react\";\nimport BasicCard from './message';\nimport { generate_request } from \"../models/User.components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet messages = [];\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nfunction urlbuilder(propt) {\n  return \"localhost:8080/chat?prompt=\" + propt;\n}\nconst helloMessage = {\n  text: \"Hello, how are you feeling today?\"\n};\nexport async function getResponse(prompt) {\n  const text = generate_request(prompt, user);\n  try {\n    // 👇️ const response: Response\n    const response = await fetch(urlbuilder(text), {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n\n    // 👇️ const result: GetUsersResponse\n    const result = await response.json();\n    console.log('result is: ', JSON.stringify(result, null, 4));\n    return result;\n  } catch (error) {\n    if (error instanceof Error) {\n      console.log('error message: ', error.message);\n      return error.message;\n    } else {\n      console.log('unexpected error: ', error);\n      return 'An unexpected error occurred';\n    }\n  }\n}\nexport default function Chat() {\n  let messages1 = messages.length != 0 ? messages.map((message, index) => BasicCard(message)) : BasicCard(helloMessage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: messages1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","BasicCard","generate_request","jsxDEV","_jsxDEV","messages","user","JSON","parse","localStorage","getItem","urlbuilder","propt","helloMessage","text","getResponse","prompt","response","fetch","method","headers","Accept","ok","Error","status","result","json","console","log","stringify","error","message","Chat","messages1","length","map","index","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jafar's PC/Documents/GitHub/Medsos/tsxweb-client/tsxweb-client/src/mainchat/chat.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport BasicCard, {Message} from './message'\r\nimport {User, generate_request} from \"../models/User.components\";\r\nimport Timer from \"../Timer/timer\";\r\n\r\nlet messages : Message[] = [];\r\nconst user: User = JSON.parse(localStorage.getItem(\"user\")!);\r\n\r\nfunction urlbuilder(propt: string) {\r\n    return \"localhost:8080/chat?prompt=\" + propt;\r\n}\r\nconst helloMessage :Message = {\r\n    text:\"Hello, how are you feeling today?\"\r\n}\r\nexport async function getResponse(prompt: string) {\r\n    const text = generate_request(prompt, user);\r\n    try {\r\n        // 👇️ const response: Response\r\n        const response = await fetch(urlbuilder(text), {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json',\r\n            },\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Error! status: ${response.status}`);\r\n        }\r\n\r\n        // 👇️ const result: GetUsersResponse\r\n        const result = (await response.json()) as User;\r\n\r\n        console.log('result is: ', JSON.stringify(result, null, 4));\r\n        return result;\r\n    } catch (error) {\r\n        if (error instanceof Error) {\r\n            console.log('error message: ', error.message);\r\n            return error.message;\r\n        } else {\r\n            console.log('unexpected error: ', error);\r\n            return 'An unexpected error occurred';\r\n        }\r\n    }\r\n}\r\n\r\nexport default function Chat() {\r\n\r\n    let messages1 = messages.length !=0 ? messages.map((message, index) => (\r\n        BasicCard(message)\r\n    )) : BasicCard(helloMessage);\r\n    return(\r\n        <div >\r\n            {messages1}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,OAAOC,SAAS,MAAiB,WAAW;AAC5C,SAAcC,gBAAgB,QAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjE,IAAIC,QAAoB,GAAG,EAAE;AAC7B,MAAMC,IAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC;AAE5D,SAASC,UAAUA,CAACC,KAAa,EAAE;EAC/B,OAAO,6BAA6B,GAAGA,KAAK;AAChD;AACA,MAAMC,YAAqB,GAAG;EAC1BC,IAAI,EAAC;AACT,CAAC;AACD,OAAO,eAAeC,WAAWA,CAACC,MAAc,EAAE;EAC9C,MAAMF,IAAI,GAAGZ,gBAAgB,CAACc,MAAM,EAAEV,IAAI,CAAC;EAC3C,IAAI;IACA;IACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACP,UAAU,CAACG,IAAI,CAAC,EAAE;MAC3CK,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE;MACZ;IACJ,CAAC,CAAC;IAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,kBAAiBN,QAAQ,CAACO,MAAO,EAAC,CAAC;IACxD;;IAEA;IACA,MAAMC,MAAM,GAAI,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAU;IAE9CC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAErB,IAAI,CAACsB,SAAS,CAACJ,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC3D,OAAOA,MAAM;EACjB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZ,IAAIA,KAAK,YAAYP,KAAK,EAAE;MACxBI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,KAAK,CAACC,OAAO,CAAC;MAC7C,OAAOD,KAAK,CAACC,OAAO;IACxB,CAAC,MAAM;MACHJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,KAAK,CAAC;MACxC,OAAO,8BAA8B;IACzC;EACJ;AACJ;AAEA,eAAe,SAASE,IAAIA,CAAA,EAAG;EAE3B,IAAIC,SAAS,GAAG5B,QAAQ,CAAC6B,MAAM,IAAG,CAAC,GAAG7B,QAAQ,CAAC8B,GAAG,CAAC,CAACJ,OAAO,EAAEK,KAAK,KAC9DnC,SAAS,CAAC8B,OAAO,CACpB,CAAC,GAAG9B,SAAS,CAACY,YAAY,CAAC;EAC5B,oBACIT,OAAA;IAAAiC,QAAA,EACKJ;EAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd;AAACC,EAAA,GAVuBV,IAAI;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}