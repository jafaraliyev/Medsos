{"ast":null,"code":"var _jsxFileName = \"/Users/farhadguliyev/Documents/GitHub/Medsos/tsxweb-client/tsxweb-client/src/LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { getUser } from './models/User.components';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let response = await getUser(username, password);\n    if (response) {\n      console.log(\"Sign in success\", response);\n      localStorage.setItem('user', JSON.stringify(response));\n      const url = \"/\" + username + \"/main_chat\";\n      navigate(url);\n      return response;\n    }\n    console.log(\"credentials problem\");\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","getUser","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","useState","password","setPassword","navigate","handleSubmit","event","preventDefault","response","console","log","localStorage","setItem","JSON","stringify","url","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/farhadguliyev/Documents/GitHub/Medsos/tsxweb-client/tsxweb-client/src/LoginForm.tsx"],"sourcesContent":["import React from 'react';\nimport {getUser, User} from './models/User.components'\nimport {useNavigate} from \"react-router-dom\";\n\n\nconst LoginForm: React.FC = () => {\n    const [username, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const navigate = useNavigate();\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        let response= await getUser(username, password);\n\n        if (response) {\n            console.log(\"Sign in success\", response);\n            localStorage.setItem('user', JSON.stringify(response));\n            const url = \"/\"+username+\"/main_chat\"\n            navigate(url);\n            return response;\n        }\n        console.log(\"credentials problem\");\n        return null;\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Username:\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)}/>\n            </label>\n            <label>\n                Password:\n                <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)}/>\n            </label>\n            <button type=\"submit\">Login</button>\n        </form>\n    );\n};\n\nexport default LoginForm;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAa,0BAA0B;AACtD,SAAQC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMG,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,YAAY,GAAG,MAAOC,KAAuC,IAAK;IACpEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIC,QAAQ,GAAE,MAAMf,OAAO,CAACM,QAAQ,EAAEG,QAAQ,CAAC;IAE/C,IAAIM,QAAQ,EAAE;MACVC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;MACxCG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,CAAC;MACtD,MAAMO,GAAG,GAAG,GAAG,GAAChB,QAAQ,GAAC,YAAY;MACrCK,QAAQ,CAACW,GAAG,CAAC;MACb,OAAOP,QAAQ;IACnB;IACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,OAAO,IAAI;EACf,CAAC;EAED,oBACId,OAAA;IAAMoB,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBACzBrB,OAAA;MAAAqB,QAAA,GAAO,WAEH,eAAArB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEpB,QAAS;QAACqB,QAAQ,EAAGd,KAAK,IAAKN,WAAW,CAACM,KAAK,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC,eACR7B,OAAA;MAAAqB,QAAA,GAAO,WAEH,eAAArB,OAAA;QAAOsB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEjB,QAAS;QAACkB,QAAQ,EAAGd,KAAK,IAAKH,WAAW,CAACG,KAAK,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC,eACR7B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEf,CAAC;AAAC3B,EAAA,CAhCID,SAAmB;EAAA,QAGJH,WAAW;AAAA;AAAAgC,EAAA,GAH1B7B,SAAmB;AAkCzB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}